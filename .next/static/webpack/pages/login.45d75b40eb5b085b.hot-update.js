"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteUser: function() { return /* binding */ deleteUser; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   isAdmin: function() { return /* binding */ isAdmin; },\n/* harmony export */   isManagerOrAdmin: function() { return /* binding */ isManagerOrAdmin; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   loginWithGoogle: function() { return /* binding */ loginWithGoogle; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   updateUserRole: function() { return /* binding */ updateUserRole; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"./src/lib/supabase.ts\");\n\n// Check if user is authenticated\nconst getCurrentUser = async ()=>{\n    try {\n        console.log(\"getCurrentUser: Starting...\");\n        const { data: { user }, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n        console.log(\"getCurrentUser: Supabase auth response:\", {\n            user: !!user,\n            error\n        });\n        if (error) {\n            console.error(\"getCurrentUser: Auth error:\", error);\n            return null;\n        }\n        if (!user) {\n            console.log(\"getCurrentUser: No user found in auth\");\n            return null;\n        }\n        console.log(\"getCurrentUser: User found in auth, checking allowed_user table...\");\n        // Get user profile from our allowed_user table\n        const { data: profile, error: profileError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"allowed_user\").select(\"*\").eq(\"email\", user.email).single();\n        console.log(\"getCurrentUser: Profile query result:\", {\n            profile: !!profile,\n            profileError\n        });\n        if (profileError) {\n            console.error(\"getCurrentUser: Profile error:\", profileError);\n            return null;\n        }\n        console.log(\"getCurrentUser: Returning profile:\", profile);\n        return profile || null;\n    } catch (error) {\n        console.error(\"getCurrentUser: Unexpected error:\", error);\n        return null;\n    }\n};\n// Login with email or phone\nconst login = async (emailOrPhone, password)=>{\n    try {\n        console.log(\"login: Starting login process for:\", emailOrPhone);\n        // First check if user exists in allowed_user table\n        const { data: allowedUser, error: userError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"allowed_user\").select(\"*\").or(\"email.eq.\".concat(emailOrPhone))// .or(`email.eq.${emailOrPhone},phone_number.eq.${emailOrPhone}`)\n        .single();\n        console.log(\"login: Allowed user check:\", allowedUser, userError, {\n            allowedUser: !!allowedUser,\n            userError\n        });\n        if (userError || !allowedUser) {\n            console.log(\"login: User not found or not authorized\");\n            return {\n                user: null,\n                error: \"User not found or not authorized\"\n            };\n        }\n        // Use Supabase Auth for authentication\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.signInWithPassword({\n            email: allowedUser.email || emailOrPhone,\n            password: password\n        });\n        console.log(\"login: Auth response:\", {\n            success: !!data.user,\n            error,\n            password\n        });\n        if (error) {\n            console.error(\"login: Auth error:\", error);\n            return {\n                user: null,\n                error: error.message\n            };\n        }\n        if (data.user) {\n            console.log(\"login: Login successful\");\n            return {\n                user: allowedUser,\n                error: null\n            };\n        }\n        console.log(\"login: Login failed - no user data\");\n        return {\n            user: null,\n            error: \"Login failed\"\n        };\n    } catch (error) {\n        console.error(\"login: Unexpected error:\", error);\n        return {\n            user: null,\n            error: \"An unexpected error occurred\"\n        };\n    }\n};\n// Google SSO Login\nconst loginWithGoogle = async ()=>{\n    try {\n        console.log(\"loginWithGoogle: Starting Google OAuth...\");\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.signInWithOAuth({\n            provider: \"google\",\n            options: {\n                redirectTo: \"\".concat(window.location.origin, \"/dashboard/booth\")\n            }\n        });\n        console.log(\"loginWithGoogle: OAuth response:\", {\n            success: !error,\n            error\n        });\n        if (error) {\n            console.error(\"loginWithGoogle: OAuth error:\", error);\n            return {\n                user: null,\n                error: error.message\n            };\n        }\n        return {\n            user: null,\n            error: null\n        }; // Will redirect to Google\n    } catch (error) {\n        console.error(\"loginWithGoogle: Unexpected error:\", error);\n        return {\n            user: null,\n            error: \"An unexpected error occurred\"\n        };\n    }\n};\n// Register new user (only for admins)\nconst registerUser = async function(email, phone, name) {\n    let role = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"manager\";\n    try {\n        console.log(\"registerUser: Starting registration for:\", email);\n        // Call the API route instead of direct Supabase operations\n        console.log(\"registerUser: Making API call to /api/register-user...\");\n        const response = await fetch(\"/api/register-user\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                phone,\n                name,\n                role\n            })\n        });\n        console.log(\"registerUser: API response status:\", response.status);\n        const result = await response.json();\n        console.log(\"registerUser: API response:\", result);\n        if (!response.ok) {\n            console.error(\"registerUser: API error:\", result.error);\n            return {\n                user: null,\n                error: result.error || \"Registration failed\"\n            };\n        }\n        console.log(\"registerUser: Registration successful\");\n        return {\n            user: result.user,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"registerUser: Unexpected error:\", error);\n        return {\n            user: null,\n            error: \"An unexpected error occurred\"\n        };\n    }\n};\n// Logout\nconst logout = async ()=>{\n    try {\n        console.log(\"logout: Starting logout...\");\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.signOut();\n        console.log(\"logout: Logout successful\");\n    } catch (error) {\n        console.error(\"logout: Error during logout:\", error);\n    }\n};\n// Reset password\nconst resetPassword = async (email)=>{\n    try {\n        console.log(\"resetPassword: Starting password reset for:\", email);\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.resetPasswordForEmail(email);\n        console.log(\"resetPassword: Result:\", {\n            success: !error,\n            error\n        });\n        return {\n            error: (error === null || error === void 0 ? void 0 : error.message) || null\n        };\n    } catch (error) {\n        console.error(\"resetPassword: Unexpected error:\", error);\n        return {\n            error: \"An unexpected error occurred\"\n        };\n    }\n};\n// Check if user is admin\nconst isAdmin = async ()=>{\n    try {\n        console.log(\"isAdmin: Checking admin status...\");\n        const user = await getCurrentUser();\n        const isAdminUser = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n        console.log(\"isAdmin: Result:\", isAdminUser);\n        return isAdminUser;\n    } catch (error) {\n        console.error(\"isAdmin: Error checking admin status:\", error);\n        return false;\n    }\n};\n// Check if user is manager or admin\nconst isManagerOrAdmin = async ()=>{\n    try {\n        console.log(\"isManagerOrAdmin: Checking manager/admin status...\");\n        const user = await getCurrentUser();\n        const isManagerOrAdminUser = (user === null || user === void 0 ? void 0 : user.role) === \"manager\" || (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n        console.log(\"isManagerOrAdmin: Result:\", isManagerOrAdminUser);\n        return isManagerOrAdminUser;\n    } catch (error) {\n        console.error(\"isManagerOrAdmin: Error checking manager/admin status:\", error);\n        return false;\n    }\n};\n// Update user role (admin only)\nconst updateUserRole = async (userId, newRole)=>{\n    try {\n        console.log(\"updateUserRole: Updating role for user:\", userId, \"to:\", newRole);\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"allowed_user\").update({\n            role: newRole\n        }).eq(\"id\", userId);\n        console.log(\"updateUserRole: Result:\", {\n            success: !error,\n            error\n        });\n        if (error) throw error;\n        return {\n            error: null\n        };\n    } catch (error) {\n        console.error(\"updateUserRole: Error updating user role:\", error);\n        return {\n            error: \"Failed to update user role\"\n        };\n    }\n};\n// Delete user (admin only)\nconst deleteUser = async (userId)=>{\n    try {\n        console.log(\"deleteUser: Deleting user:\", userId);\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"allowed_user\").delete().eq(\"id\", userId);\n        console.log(\"deleteUser: Result:\", {\n            success: !error,\n            error\n        });\n        if (error) throw error;\n        return {\n            error: null\n        };\n    } catch (error) {\n        console.error(\"deleteUser: Error deleting user:\", error);\n        return {\n            error: \"Failed to delete user\"\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0M7QUFnQnRDLGlDQUFpQztBQUMxQixNQUFNQyxpQkFBaUI7SUFDNUIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFFWixNQUFNLEVBQUVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1OLCtDQUFRQSxDQUFDTyxJQUFJLENBQUNDLE9BQU87UUFDN0ROLFFBQVFDLEdBQUcsQ0FBQywyQ0FBMkM7WUFBRUUsTUFBTSxDQUFDLENBQUNBO1lBQU1DO1FBQU07UUFFN0UsSUFBSUEsT0FBTztZQUNUSixRQUFRSSxLQUFLLENBQUMsK0JBQStCQTtZQUM3QyxPQUFPO1FBQ1Q7UUFFQSxJQUFJLENBQUNELE1BQU07WUFDVEgsUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBTztRQUNUO1FBRUFELFFBQVFDLEdBQUcsQ0FBQztRQUVaLCtDQUErQztRQUMvQyxNQUFNLEVBQUVDLE1BQU1LLE9BQU8sRUFBRUgsT0FBT0ksWUFBWSxFQUFFLEdBQUcsTUFBTVYsK0NBQVFBLENBQzFEVyxJQUFJLENBQUMsZ0JBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxFQUFFLENBQUMsU0FBU1IsS0FBS1MsS0FBSyxFQUN0QkMsTUFBTTtRQUVUYixRQUFRQyxHQUFHLENBQUMseUNBQXlDO1lBQUVNLFNBQVMsQ0FBQyxDQUFDQTtZQUFTQztRQUFhO1FBRXhGLElBQUlBLGNBQWM7WUFDaEJSLFFBQVFJLEtBQUssQ0FBQyxrQ0FBa0NJO1lBQ2hELE9BQU87UUFDVDtRQUVBUixRQUFRQyxHQUFHLENBQUMsc0NBQXNDTTtRQUNsRCxPQUFPQSxXQUFXO0lBQ3BCLEVBQUUsT0FBT0gsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMscUNBQXFDQTtRQUNuRCxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUYsNEJBQTRCO0FBQ3JCLE1BQU1VLFFBQVEsT0FBT0MsY0FBc0JDO0lBQ2hELElBQUk7UUFDRmhCLFFBQVFDLEdBQUcsQ0FBQyxzQ0FBc0NjO1FBRWxELG1EQUFtRDtRQUNuRCxNQUFNLEVBQUViLE1BQU1lLFdBQVcsRUFBRWIsT0FBT2MsU0FBUyxFQUFFLEdBQUcsTUFBTXBCLCtDQUFRQSxDQUMzRFcsSUFBSSxDQUFDLGdCQUNMQyxNQUFNLENBQUMsS0FDUFMsRUFBRSxDQUFDLFlBQXlCLE9BQWJKLGNBQ2hCLGtFQUFrRTtTQUNqRUYsTUFBTTtRQUVUYixRQUFRQyxHQUFHLENBQUMsOEJBQThCZ0IsYUFBYUMsV0FBVztZQUFFRCxhQUFhLENBQUMsQ0FBQ0E7WUFBYUM7UUFBVTtRQUUxRyxJQUFJQSxhQUFhLENBQUNELGFBQWE7WUFDN0JqQixRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPO2dCQUFFRSxNQUFNO2dCQUFNQyxPQUFPO1lBQW1DO1FBQ2pFO1FBRUEsdUNBQXVDO1FBQ3ZDLE1BQU0sRUFBRUYsSUFBSSxFQUFFRSxLQUFLLEVBQUUsR0FBRyxNQUFNTiwrQ0FBUUEsQ0FBQ08sSUFBSSxDQUFDZSxrQkFBa0IsQ0FBQztZQUM3RFIsT0FBT0ssWUFBWUwsS0FBSyxJQUFJRztZQUM1QkMsVUFBVUE7UUFDWjtRQUVBaEIsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QjtZQUFFb0IsU0FBUyxDQUFDLENBQUNuQixLQUFLQyxJQUFJO1lBQUVDO1lBQVFZO1FBQVE7UUFFN0UsSUFBSVosT0FBTztZQUNUSixRQUFRSSxLQUFLLENBQUMsc0JBQXNCQTtZQUNwQyxPQUFPO2dCQUFFRCxNQUFNO2dCQUFNQyxPQUFPQSxNQUFNa0IsT0FBTztZQUFDO1FBQzVDO1FBRUEsSUFBSXBCLEtBQUtDLElBQUksRUFBRTtZQUNiSCxRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPO2dCQUFFRSxNQUFNYztnQkFBYWIsT0FBTztZQUFLO1FBQzFDO1FBRUFKLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU87WUFBRUUsTUFBTTtZQUFNQyxPQUFPO1FBQWU7SUFDN0MsRUFBRSxPQUFPQSxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyw0QkFBNEJBO1FBQzFDLE9BQU87WUFBRUQsTUFBTTtZQUFNQyxPQUFPO1FBQStCO0lBQzdEO0FBQ0YsRUFBRTtBQUVGLG1CQUFtQjtBQUNaLE1BQU1tQixrQkFBa0I7SUFDN0IsSUFBSTtRQUNGdkIsUUFBUUMsR0FBRyxDQUFDO1FBRVosTUFBTSxFQUFFQyxJQUFJLEVBQUVFLEtBQUssRUFBRSxHQUFHLE1BQU1OLCtDQUFRQSxDQUFDTyxJQUFJLENBQUNtQixlQUFlLENBQUM7WUFDMURDLFVBQVU7WUFDVkMsU0FBUztnQkFDUEMsWUFBWSxHQUEwQixPQUF2QkMsT0FBT0MsUUFBUSxDQUFDQyxNQUFNLEVBQUM7WUFDeEM7UUFDRjtRQUVBOUIsUUFBUUMsR0FBRyxDQUFDLG9DQUFvQztZQUFFb0IsU0FBUyxDQUFDakI7WUFBT0E7UUFBTTtRQUV6RSxJQUFJQSxPQUFPO1lBQ1RKLFFBQVFJLEtBQUssQ0FBQyxpQ0FBaUNBO1lBQy9DLE9BQU87Z0JBQUVELE1BQU07Z0JBQU1DLE9BQU9BLE1BQU1rQixPQUFPO1lBQUM7UUFDNUM7UUFFQSxPQUFPO1lBQUVuQixNQUFNO1lBQU1DLE9BQU87UUFBSyxHQUFHLDBCQUEwQjtJQUNoRSxFQUFFLE9BQU9BLE9BQU87UUFDZEosUUFBUUksS0FBSyxDQUFDLHNDQUFzQ0E7UUFDcEQsT0FBTztZQUFFRCxNQUFNO1lBQU1DLE9BQU87UUFBK0I7SUFDN0Q7QUFDRixFQUFFO0FBRUYsc0NBQXNDO0FBQy9CLE1BQU0yQixlQUFlLGVBQU9uQixPQUFlb0IsT0FBZUM7UUFBY0Msd0VBQTRCO0lBQ3pHLElBQUk7UUFDRmxDLFFBQVFDLEdBQUcsQ0FBQyw0Q0FBNENXO1FBRXhELDJEQUEyRDtRQUMzRFosUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTWtDLFdBQVcsTUFBTUMsTUFBTSxzQkFBc0I7WUFDakRDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUFFN0I7Z0JBQU9vQjtnQkFBT0M7Z0JBQU1DO1lBQUs7UUFDbEQ7UUFFQWxDLFFBQVFDLEdBQUcsQ0FBQyxzQ0FBc0NrQyxTQUFTTyxNQUFNO1FBQ2pFLE1BQU1DLFNBQVMsTUFBTVIsU0FBU1MsSUFBSTtRQUNsQzVDLFFBQVFDLEdBQUcsQ0FBQywrQkFBK0IwQztRQUUzQyxJQUFJLENBQUNSLFNBQVNVLEVBQUUsRUFBRTtZQUNoQjdDLFFBQVFJLEtBQUssQ0FBQyw0QkFBNEJ1QyxPQUFPdkMsS0FBSztZQUN0RCxPQUFPO2dCQUFFRCxNQUFNO2dCQUFNQyxPQUFPdUMsT0FBT3ZDLEtBQUssSUFBSTtZQUFzQjtRQUNwRTtRQUVBSixRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPO1lBQ0xFLE1BQU13QyxPQUFPeEMsSUFBSTtZQUNqQkMsT0FBTztRQUNUO0lBQ0YsRUFBRSxPQUFPQSxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU87WUFBRUQsTUFBTTtZQUFNQyxPQUFPO1FBQStCO0lBQzdEO0FBQ0YsRUFBRTtBQUVGLFNBQVM7QUFDRixNQUFNMEMsU0FBUztJQUNwQixJQUFJO1FBQ0Y5QyxRQUFRQyxHQUFHLENBQUM7UUFDWixNQUFNSCwrQ0FBUUEsQ0FBQ08sSUFBSSxDQUFDMEMsT0FBTztRQUMzQi9DLFFBQVFDLEdBQUcsQ0FBQztJQUNkLEVBQUUsT0FBT0csT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsZ0NBQWdDQTtJQUNoRDtBQUNGLEVBQUU7QUFFRixpQkFBaUI7QUFDVixNQUFNNEMsZ0JBQWdCLE9BQU9wQztJQUNsQyxJQUFJO1FBQ0ZaLFFBQVFDLEdBQUcsQ0FBQywrQ0FBK0NXO1FBRTNELE1BQU0sRUFBRVIsS0FBSyxFQUFFLEdBQUcsTUFBTU4sK0NBQVFBLENBQUNPLElBQUksQ0FBQzRDLHFCQUFxQixDQUFDckM7UUFFNURaLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEI7WUFBRW9CLFNBQVMsQ0FBQ2pCO1lBQU9BO1FBQU07UUFFL0QsT0FBTztZQUFFQSxPQUFPQSxDQUFBQSxrQkFBQUEsNEJBQUFBLE1BQU9rQixPQUFPLEtBQUk7UUFBSztJQUN6QyxFQUFFLE9BQU9sQixPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE9BQU87WUFBRUEsT0FBTztRQUErQjtJQUNqRDtBQUNGLEVBQUU7QUFFRix5QkFBeUI7QUFDbEIsTUFBTThDLFVBQVU7SUFDckIsSUFBSTtRQUNGbEQsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTUUsT0FBTyxNQUFNSjtRQUNuQixNQUFNb0QsY0FBY2hELENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTStCLElBQUksTUFBSztRQUNuQ2xDLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JrRDtRQUNoQyxPQUFPQTtJQUNULEVBQUUsT0FBTy9DLE9BQU87UUFDZEosUUFBUUksS0FBSyxDQUFDLHlDQUF5Q0E7UUFDdkQsT0FBTztJQUNUO0FBQ0YsRUFBRTtBQUVGLG9DQUFvQztBQUM3QixNQUFNZ0QsbUJBQW1CO0lBQzlCLElBQUk7UUFDRnBELFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1FLE9BQU8sTUFBTUo7UUFDbkIsTUFBTXNELHVCQUF1QmxELENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTStCLElBQUksTUFBSyxhQUFhL0IsQ0FBQUEsaUJBQUFBLDJCQUFBQSxLQUFNK0IsSUFBSSxNQUFLO1FBQ3hFbEMsUUFBUUMsR0FBRyxDQUFDLDZCQUE2Qm9EO1FBQ3pDLE9BQU9BO0lBQ1QsRUFBRSxPQUFPakQsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsMERBQTBEQTtRQUN4RSxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUYsZ0NBQWdDO0FBQ3pCLE1BQU1rRCxpQkFBaUIsT0FBT0MsUUFBZ0JDO0lBQ25ELElBQUk7UUFDRnhELFFBQVFDLEdBQUcsQ0FBQywyQ0FBMkNzRCxRQUFRLE9BQU9DO1FBRXRFLE1BQU0sRUFBRXBELEtBQUssRUFBRSxHQUFHLE1BQU1OLCtDQUFRQSxDQUM3QlcsSUFBSSxDQUFDLGdCQUNMZ0QsTUFBTSxDQUFDO1lBQUV2QixNQUFNc0I7UUFBUSxHQUN2QjdDLEVBQUUsQ0FBQyxNQUFNNEM7UUFFWnZELFFBQVFDLEdBQUcsQ0FBQywyQkFBMkI7WUFBRW9CLFNBQVMsQ0FBQ2pCO1lBQU9BO1FBQU07UUFFaEUsSUFBSUEsT0FBTyxNQUFNQTtRQUNqQixPQUFPO1lBQUVBLE9BQU87UUFBSztJQUN2QixFQUFFLE9BQU9BLE9BQU87UUFDZEosUUFBUUksS0FBSyxDQUFDLDZDQUE2Q0E7UUFDM0QsT0FBTztZQUFFQSxPQUFPO1FBQTZCO0lBQy9DO0FBQ0YsRUFBRTtBQUVGLDJCQUEyQjtBQUNwQixNQUFNc0QsYUFBYSxPQUFPSDtJQUMvQixJQUFJO1FBQ0Z2RCxRQUFRQyxHQUFHLENBQUMsOEJBQThCc0Q7UUFFMUMsTUFBTSxFQUFFbkQsS0FBSyxFQUFFLEdBQUcsTUFBTU4sK0NBQVFBLENBQzdCVyxJQUFJLENBQUMsZ0JBQ0xrRCxNQUFNLEdBQ05oRCxFQUFFLENBQUMsTUFBTTRDO1FBRVp2RCxRQUFRQyxHQUFHLENBQUMsdUJBQXVCO1lBQUVvQixTQUFTLENBQUNqQjtZQUFPQTtRQUFNO1FBRTVELElBQUlBLE9BQU8sTUFBTUE7UUFDakIsT0FBTztZQUFFQSxPQUFPO1FBQUs7SUFDdkIsRUFBRSxPQUFPQSxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE9BQU87WUFBRUEsT0FBTztRQUF3QjtJQUMxQztBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hdXRoLnRzPzY2OTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICcuL3N1cGFiYXNlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XHJcbiAgaWQ6IG51bWJlcjtcclxuICBuYW1lPzogc3RyaW5nO1xyXG4gIGVtYWlsPzogc3RyaW5nO1xyXG4gIHBob25lX251bWJlcj86IHN0cmluZztcclxuICByb2xlOiAnYWRtaW4nIHwgJ21hbmFnZXInO1xyXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBdXRoUmVzcG9uc2Uge1xyXG4gIHVzZXI6IFVzZXIgfCBudWxsO1xyXG4gIGVycm9yOiBzdHJpbmcgfCBudWxsO1xyXG59XHJcblxyXG4vLyBDaGVjayBpZiB1c2VyIGlzIGF1dGhlbnRpY2F0ZWRcclxuZXhwb3J0IGNvbnN0IGdldEN1cnJlbnRVc2VyID0gYXN5bmMgKCk6IFByb21pc2U8VXNlciB8IG51bGw+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ2dldEN1cnJlbnRVc2VyOiBTdGFydGluZy4uLicpO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IGRhdGE6IHsgdXNlciB9LCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKCk7XHJcbiAgICBjb25zb2xlLmxvZygnZ2V0Q3VycmVudFVzZXI6IFN1cGFiYXNlIGF1dGggcmVzcG9uc2U6JywgeyB1c2VyOiAhIXVzZXIsIGVycm9yIH0pO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignZ2V0Q3VycmVudFVzZXI6IEF1dGggZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdnZXRDdXJyZW50VXNlcjogTm8gdXNlciBmb3VuZCBpbiBhdXRoJyk7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygnZ2V0Q3VycmVudFVzZXI6IFVzZXIgZm91bmQgaW4gYXV0aCwgY2hlY2tpbmcgYWxsb3dlZF91c2VyIHRhYmxlLi4uJyk7XHJcbiAgICBcclxuICAgIC8vIEdldCB1c2VyIHByb2ZpbGUgZnJvbSBvdXIgYWxsb3dlZF91c2VyIHRhYmxlXHJcbiAgICBjb25zdCB7IGRhdGE6IHByb2ZpbGUsIGVycm9yOiBwcm9maWxlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXHJcbiAgICAgIC5mcm9tKCdhbGxvd2VkX3VzZXInKVxyXG4gICAgICAuc2VsZWN0KCcqJylcclxuICAgICAgLmVxKCdlbWFpbCcsIHVzZXIuZW1haWwpXHJcbiAgICAgIC5zaW5nbGUoKTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ2dldEN1cnJlbnRVc2VyOiBQcm9maWxlIHF1ZXJ5IHJlc3VsdDonLCB7IHByb2ZpbGU6ICEhcHJvZmlsZSwgcHJvZmlsZUVycm9yIH0pO1xyXG4gICAgXHJcbiAgICBpZiAocHJvZmlsZUVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ2dldEN1cnJlbnRVc2VyOiBQcm9maWxlIGVycm9yOicsIHByb2ZpbGVFcnJvcik7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygnZ2V0Q3VycmVudFVzZXI6IFJldHVybmluZyBwcm9maWxlOicsIHByb2ZpbGUpO1xyXG4gICAgcmV0dXJuIHByb2ZpbGUgfHwgbnVsbDtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignZ2V0Q3VycmVudFVzZXI6IFVuZXhwZWN0ZWQgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gTG9naW4gd2l0aCBlbWFpbCBvciBwaG9uZVxyXG5leHBvcnQgY29uc3QgbG9naW4gPSBhc3luYyAoZW1haWxPclBob25lOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPEF1dGhSZXNwb25zZT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnbG9naW46IFN0YXJ0aW5nIGxvZ2luIHByb2Nlc3MgZm9yOicsIGVtYWlsT3JQaG9uZSk7XHJcbiAgICBcclxuICAgIC8vIEZpcnN0IGNoZWNrIGlmIHVzZXIgZXhpc3RzIGluIGFsbG93ZWRfdXNlciB0YWJsZVxyXG4gICAgY29uc3QgeyBkYXRhOiBhbGxvd2VkVXNlciwgZXJyb3I6IHVzZXJFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ2FsbG93ZWRfdXNlcicpXHJcbiAgICAgIC5zZWxlY3QoJyonKVxyXG4gICAgICAub3IoYGVtYWlsLmVxLiR7ZW1haWxPclBob25lfWApXHJcbiAgICAgIC8vIC5vcihgZW1haWwuZXEuJHtlbWFpbE9yUGhvbmV9LHBob25lX251bWJlci5lcS4ke2VtYWlsT3JQaG9uZX1gKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ2xvZ2luOiBBbGxvd2VkIHVzZXIgY2hlY2s6JywgYWxsb3dlZFVzZXIsIHVzZXJFcnJvciwgeyBhbGxvd2VkVXNlcjogISFhbGxvd2VkVXNlciwgdXNlckVycm9yIH0pO1xyXG5cclxuICAgIGlmICh1c2VyRXJyb3IgfHwgIWFsbG93ZWRVc2VyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdsb2dpbjogVXNlciBub3QgZm91bmQgb3Igbm90IGF1dGhvcml6ZWQnKTtcclxuICAgICAgcmV0dXJuIHsgdXNlcjogbnVsbCwgZXJyb3I6ICdVc2VyIG5vdCBmb3VuZCBvciBub3QgYXV0aG9yaXplZCcgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBVc2UgU3VwYWJhc2UgQXV0aCBmb3IgYXV0aGVudGljYXRpb25cclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aFBhc3N3b3JkKHtcclxuICAgICAgZW1haWw6IGFsbG93ZWRVc2VyLmVtYWlsIHx8IGVtYWlsT3JQaG9uZSxcclxuICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ2xvZ2luOiBBdXRoIHJlc3BvbnNlOicsIHsgc3VjY2VzczogISFkYXRhLnVzZXIsIGVycm9yICwgcGFzc3dvcmR9KTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignbG9naW46IEF1dGggZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4geyB1c2VyOiBudWxsLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkYXRhLnVzZXIpIHtcclxuICAgICAgY29uc29sZS5sb2coJ2xvZ2luOiBMb2dpbiBzdWNjZXNzZnVsJyk7XHJcbiAgICAgIHJldHVybiB7IHVzZXI6IGFsbG93ZWRVc2VyLCBlcnJvcjogbnVsbCB9O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdsb2dpbjogTG9naW4gZmFpbGVkIC0gbm8gdXNlciBkYXRhJyk7XHJcbiAgICByZXR1cm4geyB1c2VyOiBudWxsLCBlcnJvcjogJ0xvZ2luIGZhaWxlZCcgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignbG9naW46IFVuZXhwZWN0ZWQgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgdXNlcjogbnVsbCwgZXJyb3I6ICdBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkJyB9O1xyXG4gIH1cclxufTtcclxuXHJcbi8vIEdvb2dsZSBTU08gTG9naW5cclxuZXhwb3J0IGNvbnN0IGxvZ2luV2l0aEdvb2dsZSA9IGFzeW5jICgpOiBQcm9taXNlPEF1dGhSZXNwb25zZT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnbG9naW5XaXRoR29vZ2xlOiBTdGFydGluZyBHb29nbGUgT0F1dGguLi4nKTtcclxuICAgIFxyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduSW5XaXRoT0F1dGgoe1xyXG4gICAgICBwcm92aWRlcjogJ2dvb2dsZScsXHJcbiAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICByZWRpcmVjdFRvOiBgJHt3aW5kb3cubG9jYXRpb24ub3JpZ2lufS9kYXNoYm9hcmQvYm9vdGhgXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdsb2dpbldpdGhHb29nbGU6IE9BdXRoIHJlc3BvbnNlOicsIHsgc3VjY2VzczogIWVycm9yLCBlcnJvciB9KTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignbG9naW5XaXRoR29vZ2xlOiBPQXV0aCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiB7IHVzZXI6IG51bGwsIGVycm9yOiBlcnJvci5tZXNzYWdlIH07XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgdXNlcjogbnVsbCwgZXJyb3I6IG51bGwgfTsgLy8gV2lsbCByZWRpcmVjdCB0byBHb29nbGVcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignbG9naW5XaXRoR29vZ2xlOiBVbmV4cGVjdGVkIGVycm9yOicsIGVycm9yKTtcclxuICAgIHJldHVybiB7IHVzZXI6IG51bGwsIGVycm9yOiAnQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZCcgfTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBSZWdpc3RlciBuZXcgdXNlciAob25seSBmb3IgYWRtaW5zKVxyXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJVc2VyID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBob25lOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgcm9sZTogJ2FkbWluJyB8ICdtYW5hZ2VyJyA9ICdtYW5hZ2VyJyk6IFByb21pc2U8QXV0aFJlc3BvbnNlPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnNvbGUubG9nKCdyZWdpc3RlclVzZXI6IFN0YXJ0aW5nIHJlZ2lzdHJhdGlvbiBmb3I6JywgZW1haWwpO1xyXG4gICAgXHJcbiAgICAvLyBDYWxsIHRoZSBBUEkgcm91dGUgaW5zdGVhZCBvZiBkaXJlY3QgU3VwYWJhc2Ugb3BlcmF0aW9uc1xyXG4gICAgY29uc29sZS5sb2coJ3JlZ2lzdGVyVXNlcjogTWFraW5nIEFQSSBjYWxsIHRvIC9hcGkvcmVnaXN0ZXItdXNlci4uLicpO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9yZWdpc3Rlci11c2VyJywge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZW1haWwsIHBob25lLCBuYW1lLCByb2xlIH0pLFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ3JlZ2lzdGVyVXNlcjogQVBJIHJlc3BvbnNlIHN0YXR1czonLCByZXNwb25zZS5zdGF0dXMpO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2coJ3JlZ2lzdGVyVXNlcjogQVBJIHJlc3BvbnNlOicsIHJlc3VsdCk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdyZWdpc3RlclVzZXI6IEFQSSBlcnJvcjonLCByZXN1bHQuZXJyb3IpO1xyXG4gICAgICByZXR1cm4geyB1c2VyOiBudWxsLCBlcnJvcjogcmVzdWx0LmVycm9yIHx8ICdSZWdpc3RyYXRpb24gZmFpbGVkJyB9O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdyZWdpc3RlclVzZXI6IFJlZ2lzdHJhdGlvbiBzdWNjZXNzZnVsJyk7XHJcbiAgICByZXR1cm4geyBcclxuICAgICAgdXNlcjogcmVzdWx0LnVzZXIsIFxyXG4gICAgICBlcnJvcjogbnVsbCBcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ3JlZ2lzdGVyVXNlcjogVW5leHBlY3RlZCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4geyB1c2VyOiBudWxsLCBlcnJvcjogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQnIH07XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gTG9nb3V0XHJcbmV4cG9ydCBjb25zdCBsb2dvdXQgPSBhc3luYyAoKTogUHJvbWlzZTx2b2lkPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnNvbGUubG9nKCdsb2dvdXQ6IFN0YXJ0aW5nIGxvZ291dC4uLicpO1xyXG4gICAgYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduT3V0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnbG9nb3V0OiBMb2dvdXQgc3VjY2Vzc2Z1bCcpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdsb2dvdXQ6IEVycm9yIGR1cmluZyBsb2dvdXQ6JywgZXJyb3IpO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIFJlc2V0IHBhc3N3b3JkXHJcbmV4cG9ydCBjb25zdCByZXNldFBhc3N3b3JkID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcpOiBQcm9taXNlPHsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygncmVzZXRQYXNzd29yZDogU3RhcnRpbmcgcGFzc3dvcmQgcmVzZXQgZm9yOicsIGVtYWlsKTtcclxuICAgIFxyXG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5yZXNldFBhc3N3b3JkRm9yRW1haWwoZW1haWwpO1xyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygncmVzZXRQYXNzd29yZDogUmVzdWx0OicsIHsgc3VjY2VzczogIWVycm9yLCBlcnJvciB9KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yPy5tZXNzYWdlIHx8IG51bGwgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcigncmVzZXRQYXNzd29yZDogVW5leHBlY3RlZCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4geyBlcnJvcjogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQnIH07XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gQ2hlY2sgaWYgdXNlciBpcyBhZG1pblxyXG5leHBvcnQgY29uc3QgaXNBZG1pbiA9IGFzeW5jICgpOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ2lzQWRtaW46IENoZWNraW5nIGFkbWluIHN0YXR1cy4uLicpO1xyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGdldEN1cnJlbnRVc2VyKCk7XHJcbiAgICBjb25zdCBpc0FkbWluVXNlciA9IHVzZXI/LnJvbGUgPT09ICdhZG1pbic7XHJcbiAgICBjb25zb2xlLmxvZygnaXNBZG1pbjogUmVzdWx0OicsIGlzQWRtaW5Vc2VyKTtcclxuICAgIHJldHVybiBpc0FkbWluVXNlcjtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignaXNBZG1pbjogRXJyb3IgY2hlY2tpbmcgYWRtaW4gc3RhdHVzOicsIGVycm9yKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBDaGVjayBpZiB1c2VyIGlzIG1hbmFnZXIgb3IgYWRtaW5cclxuZXhwb3J0IGNvbnN0IGlzTWFuYWdlck9yQWRtaW4gPSBhc3luYyAoKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnNvbGUubG9nKCdpc01hbmFnZXJPckFkbWluOiBDaGVja2luZyBtYW5hZ2VyL2FkbWluIHN0YXR1cy4uLicpO1xyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGdldEN1cnJlbnRVc2VyKCk7XHJcbiAgICBjb25zdCBpc01hbmFnZXJPckFkbWluVXNlciA9IHVzZXI/LnJvbGUgPT09ICdtYW5hZ2VyJyB8fCB1c2VyPy5yb2xlID09PSAnYWRtaW4nO1xyXG4gICAgY29uc29sZS5sb2coJ2lzTWFuYWdlck9yQWRtaW46IFJlc3VsdDonLCBpc01hbmFnZXJPckFkbWluVXNlcik7XHJcbiAgICByZXR1cm4gaXNNYW5hZ2VyT3JBZG1pblVzZXI7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ2lzTWFuYWdlck9yQWRtaW46IEVycm9yIGNoZWNraW5nIG1hbmFnZXIvYWRtaW4gc3RhdHVzOicsIGVycm9yKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBVcGRhdGUgdXNlciByb2xlIChhZG1pbiBvbmx5KVxyXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlclJvbGUgPSBhc3luYyAodXNlcklkOiBudW1iZXIsIG5ld1JvbGU6ICdhZG1pbicgfCAnbWFuYWdlcicpOiBQcm9taXNlPHsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygndXBkYXRlVXNlclJvbGU6IFVwZGF0aW5nIHJvbGUgZm9yIHVzZXI6JywgdXNlcklkLCAndG86JywgbmV3Um9sZSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXHJcbiAgICAgIC5mcm9tKCdhbGxvd2VkX3VzZXInKVxyXG4gICAgICAudXBkYXRlKHsgcm9sZTogbmV3Um9sZSB9KVxyXG4gICAgICAuZXEoJ2lkJywgdXNlcklkKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygndXBkYXRlVXNlclJvbGU6IFJlc3VsdDonLCB7IHN1Y2Nlc3M6ICFlcnJvciwgZXJyb3IgfSk7XHJcblxyXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcclxuICAgIHJldHVybiB7IGVycm9yOiBudWxsIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ3VwZGF0ZVVzZXJSb2xlOiBFcnJvciB1cGRhdGluZyB1c2VyIHJvbGU6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgZXJyb3I6ICdGYWlsZWQgdG8gdXBkYXRlIHVzZXIgcm9sZScgfTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBEZWxldGUgdXNlciAoYWRtaW4gb25seSlcclxuZXhwb3J0IGNvbnN0IGRlbGV0ZVVzZXIgPSBhc3luYyAodXNlcklkOiBudW1iZXIpOiBQcm9taXNlPHsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnZGVsZXRlVXNlcjogRGVsZXRpbmcgdXNlcjonLCB1c2VySWQpO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgnYWxsb3dlZF91c2VyJylcclxuICAgICAgLmRlbGV0ZSgpXHJcbiAgICAgIC5lcSgnaWQnLCB1c2VySWQpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdkZWxldGVVc2VyOiBSZXN1bHQ6JywgeyBzdWNjZXNzOiAhZXJyb3IsIGVycm9yIH0pO1xyXG5cclxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XHJcbiAgICByZXR1cm4geyBlcnJvcjogbnVsbCB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdkZWxldGVVc2VyOiBFcnJvciBkZWxldGluZyB1c2VyOicsIGVycm9yKTtcclxuICAgIHJldHVybiB7IGVycm9yOiAnRmFpbGVkIHRvIGRlbGV0ZSB1c2VyJyB9O1xyXG4gIH1cclxufTtcclxuIl0sIm5hbWVzIjpbInN1cGFiYXNlIiwiZ2V0Q3VycmVudFVzZXIiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsInVzZXIiLCJlcnJvciIsImF1dGgiLCJnZXRVc2VyIiwicHJvZmlsZSIsInByb2ZpbGVFcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsImVtYWlsIiwic2luZ2xlIiwibG9naW4iLCJlbWFpbE9yUGhvbmUiLCJwYXNzd29yZCIsImFsbG93ZWRVc2VyIiwidXNlckVycm9yIiwib3IiLCJzaWduSW5XaXRoUGFzc3dvcmQiLCJzdWNjZXNzIiwibWVzc2FnZSIsImxvZ2luV2l0aEdvb2dsZSIsInNpZ25JbldpdGhPQXV0aCIsInByb3ZpZGVyIiwib3B0aW9ucyIsInJlZGlyZWN0VG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInJlZ2lzdGVyVXNlciIsInBob25lIiwibmFtZSIsInJvbGUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhdHVzIiwicmVzdWx0IiwianNvbiIsIm9rIiwibG9nb3V0Iiwic2lnbk91dCIsInJlc2V0UGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkRm9yRW1haWwiLCJpc0FkbWluIiwiaXNBZG1pblVzZXIiLCJpc01hbmFnZXJPckFkbWluIiwiaXNNYW5hZ2VyT3JBZG1pblVzZXIiLCJ1cGRhdGVVc2VyUm9sZSIsInVzZXJJZCIsIm5ld1JvbGUiLCJ1cGRhdGUiLCJkZWxldGVVc2VyIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/auth.ts\n"));

/***/ })

});